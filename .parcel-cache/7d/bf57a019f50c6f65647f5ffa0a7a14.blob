//todo: Book Class ==> Represents a book
class Book {
  constructor(title, author, isbn) {
    this.title = title;
    this.author = author;
    this.isbn = isbn;
  }
}

//todo: UI Class ==> Handle UI Class
class UI {
  static displayBooks() {
    const title = document.querySelector("#title").value;
    const author = document.querySelector("#author").value;
    const isbn = document.querySelector("#isbn").value;

    const book = new Book(title, author, isbn);

    // const storedBooks = [
    //   {
    //     title: "Book One",
    //     author: "John Doe",
    //     isbn: "324241245",
    //   },
    //   {
    //     title: "Book Tw0",
    //     author: "Jane Doe",
    //     isbn: "32900145",
    //   },
    // ];

    // //warn
    UI.addBookToList(book);
    // storedBooks.forEach((book) => UI.addBookToList(book));
  }

  static addBookToList(book) {
    const list = document.querySelector("#book-list");
    const row = document.createElement("tr");

    row.innerHTML = `
    <td>${book.title}</td>
    <td>${book.author}</td>
    <td>${book.isbn}</td>
    <td><a href="#"><button class="btn-danger btn-sm delete">X</button></td>
    `;

    list.appendChild(row);
  }
}

//todo: Store Class ==> Handles Storage
class Storage {}

//todo: Event ==> Display Books

// document.addEventListener("DOMContentLoaded", UI.displayBooks);

//todo: Event ==> Add a book
document
  .querySelector("#book-form")
  .addEventListener("submit", UI.displayBooks);

//todo: Event ==> Remove a book
